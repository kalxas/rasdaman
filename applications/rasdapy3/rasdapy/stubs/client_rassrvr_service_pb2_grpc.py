# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from rasdapy.stubs import client_rassrvr_service_pb2 as client__rassrvr__service__pb2
from rasdapy.stubs import common_service_pb2 as common__service__pb2


class ClientRassrvrServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OpenServerDatabase = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/OpenServerDatabase',
                request_serializer=client__rassrvr__service__pb2.OpenServerDatabaseReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.OpenServerDatabaseRepl.FromString,
                )
        self.CloseServerDatabase = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/CloseServerDatabase',
                request_serializer=client__rassrvr__service__pb2.CloseServerDatabaseReq.SerializeToString,
                response_deserializer=common__service__pb2.Void.FromString,
                )
        self.CreateDatabase = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/CreateDatabase',
                request_serializer=client__rassrvr__service__pb2.CreateDatabaseReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.CreateDatabaseRepl.FromString,
                )
        self.DestroyDatabase = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/DestroyDatabase',
                request_serializer=client__rassrvr__service__pb2.DestroyDatabaseReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.DestroyDatabaseRepl.FromString,
                )
        self.BeginTransaction = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/BeginTransaction',
                request_serializer=client__rassrvr__service__pb2.BeginTransactionReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.BeginTransactionRepl.FromString,
                )
        self.CommitTransaction = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/CommitTransaction',
                request_serializer=client__rassrvr__service__pb2.CommitTransactionReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.CommitTransactionRepl.FromString,
                )
        self.AbortTransaction = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/AbortTransaction',
                request_serializer=client__rassrvr__service__pb2.AbortTransactionReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.AbortTransactionRepl.FromString,
                )
        self.IsTransactionOpen = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/IsTransactionOpen',
                request_serializer=client__rassrvr__service__pb2.IsTransactionOpenReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.IsTransactionOpenRepl.FromString,
                )
        self.StartInsertMDD = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/StartInsertMDD',
                request_serializer=client__rassrvr__service__pb2.StartInsertMDDReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.StartInsertMDDRepl.FromString,
                )
        self.StartInsertTransMDD = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/StartInsertTransMDD',
                request_serializer=client__rassrvr__service__pb2.StartInsertTransMDDReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.StartInsertTransMDDRepl.FromString,
                )
        self.InsertTile = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/InsertTile',
                request_serializer=client__rassrvr__service__pb2.InsertTileReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.InsertTileRepl.FromString,
                )
        self.EndInsertMDD = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/EndInsertMDD',
                request_serializer=client__rassrvr__service__pb2.EndInsertMDDReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.EndInsertMDDRepl.FromString,
                )
        self.InsertCollection = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/InsertCollection',
                request_serializer=client__rassrvr__service__pb2.InsertCollectionReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.InsertCollectionRepl.FromString,
                )
        self.DeleteCollectionByName = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/DeleteCollectionByName',
                request_serializer=client__rassrvr__service__pb2.DeleteCollectionByNameReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.DeleteCollectionByNameRepl.FromString,
                )
        self.DeleteCollectionByOid = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/DeleteCollectionByOid',
                request_serializer=client__rassrvr__service__pb2.DeleteCollectionByOidReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.DeleteCollectionByOidRepl.FromString,
                )
        self.RemoveObjectFromCollection = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/RemoveObjectFromCollection',
                request_serializer=client__rassrvr__service__pb2.RemoveObjectFromCollectionReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.RemoveObjectFromCollectionRepl.FromString,
                )
        self.GetCollectionByNameOrOid = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/GetCollectionByNameOrOid',
                request_serializer=client__rassrvr__service__pb2.GetCollectionByNameOrOidReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.GetCollectionByNameOrOidRepl.FromString,
                )
        self.GetCollOidsByNameOrOid = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/GetCollOidsByNameOrOid',
                request_serializer=client__rassrvr__service__pb2.GetCollOidsByNameOrOidReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.GetCollOidsByNameOrOidRepl.FromString,
                )
        self.GetNextMDD = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/GetNextMDD',
                request_serializer=client__rassrvr__service__pb2.GetNextMDDReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.GetNextMDDRepl.FromString,
                )
        self.GetNextTile = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/GetNextTile',
                request_serializer=client__rassrvr__service__pb2.GetNextTileReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.GetNextTileRepl.FromString,
                )
        self.EndTransfer = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/EndTransfer',
                request_serializer=client__rassrvr__service__pb2.EndTransferReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.EndTransferRepl.FromString,
                )
        self.InitUpdate = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/InitUpdate',
                request_serializer=client__rassrvr__service__pb2.InitUpdateReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.InitUpdateRepl.FromString,
                )
        self.ExecuteQuery = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/ExecuteQuery',
                request_serializer=client__rassrvr__service__pb2.ExecuteQueryReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.ExecuteQueryRepl.FromString,
                )
        self.ExecuteHttpQuery = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/ExecuteHttpQuery',
                request_serializer=client__rassrvr__service__pb2.ExecuteHttpQueryReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.ExecuteHttpQueryRepl.FromString,
                )
        self.GetNextElement = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/GetNextElement',
                request_serializer=client__rassrvr__service__pb2.GetNextElementReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.GetNextElementRepl.FromString,
                )
        self.ExecuteUpdateQuery = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/ExecuteUpdateQuery',
                request_serializer=client__rassrvr__service__pb2.ExecuteUpdateQueryReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.ExecuteUpdateQueryRepl.FromString,
                )
        self.ExecuteInsertQuery = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/ExecuteInsertQuery',
                request_serializer=client__rassrvr__service__pb2.ExecuteInsertQueryReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.ExecuteInsertQueryRepl.FromString,
                )
        self.GetNewOid = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/GetNewOid',
                request_serializer=client__rassrvr__service__pb2.GetNewOidReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.GetNewOidRepl.FromString,
                )
        self.GetObjectType = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/GetObjectType',
                request_serializer=client__rassrvr__service__pb2.GetObjectTypeReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.GetObjectTypeRepl.FromString,
                )
        self.GetTypeStructure = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/GetTypeStructure',
                request_serializer=client__rassrvr__service__pb2.GetTypeStructureReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.GetTypeStructureRepl.FromString,
                )
        self.SetFormat = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/SetFormat',
                request_serializer=client__rassrvr__service__pb2.SetFormatReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.SetFormatRepl.FromString,
                )
        self.KeepAlive = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/KeepAlive',
                request_serializer=client__rassrvr__service__pb2.KeepAliveRequest.SerializeToString,
                response_deserializer=common__service__pb2.Void.FromString,
                )
        self.BeginStreamedHttpQuery = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/BeginStreamedHttpQuery',
                request_serializer=client__rassrvr__service__pb2.BeginStreamedHttpQueryReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.StreamedHttpQueryRepl.FromString,
                )
        self.GetNextStreamedHttpQuery = channel.unary_unary(
                '/rasnet.service.ClientRassrvrService/GetNextStreamedHttpQuery',
                request_serializer=client__rassrvr__service__pb2.GetNextStreamedHttpQueryReq.SerializeToString,
                response_deserializer=client__rassrvr__service__pb2.StreamedHttpQueryRepl.FromString,
                )


class ClientRassrvrServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def OpenServerDatabase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseServerDatabase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDatabase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroyDatabase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BeginTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommitTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AbortTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsTransactionOpen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartInsertMDD(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartInsertTransMDD(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertTile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndInsertMDD(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCollectionByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCollectionByOid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveObjectFromCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCollectionByNameOrOid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCollOidsByNameOrOid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNextMDD(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNextTile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteHttpQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNextElement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteUpdateQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteInsertQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNewOid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetObjectType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTypeStructure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFormat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KeepAlive(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BeginStreamedHttpQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNextStreamedHttpQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientRassrvrServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OpenServerDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenServerDatabase,
                    request_deserializer=client__rassrvr__service__pb2.OpenServerDatabaseReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.OpenServerDatabaseRepl.SerializeToString,
            ),
            'CloseServerDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseServerDatabase,
                    request_deserializer=client__rassrvr__service__pb2.CloseServerDatabaseReq.FromString,
                    response_serializer=common__service__pb2.Void.SerializeToString,
            ),
            'CreateDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDatabase,
                    request_deserializer=client__rassrvr__service__pb2.CreateDatabaseReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.CreateDatabaseRepl.SerializeToString,
            ),
            'DestroyDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroyDatabase,
                    request_deserializer=client__rassrvr__service__pb2.DestroyDatabaseReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.DestroyDatabaseRepl.SerializeToString,
            ),
            'BeginTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.BeginTransaction,
                    request_deserializer=client__rassrvr__service__pb2.BeginTransactionReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.BeginTransactionRepl.SerializeToString,
            ),
            'CommitTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CommitTransaction,
                    request_deserializer=client__rassrvr__service__pb2.CommitTransactionReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.CommitTransactionRepl.SerializeToString,
            ),
            'AbortTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.AbortTransaction,
                    request_deserializer=client__rassrvr__service__pb2.AbortTransactionReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.AbortTransactionRepl.SerializeToString,
            ),
            'IsTransactionOpen': grpc.unary_unary_rpc_method_handler(
                    servicer.IsTransactionOpen,
                    request_deserializer=client__rassrvr__service__pb2.IsTransactionOpenReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.IsTransactionOpenRepl.SerializeToString,
            ),
            'StartInsertMDD': grpc.unary_unary_rpc_method_handler(
                    servicer.StartInsertMDD,
                    request_deserializer=client__rassrvr__service__pb2.StartInsertMDDReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.StartInsertMDDRepl.SerializeToString,
            ),
            'StartInsertTransMDD': grpc.unary_unary_rpc_method_handler(
                    servicer.StartInsertTransMDD,
                    request_deserializer=client__rassrvr__service__pb2.StartInsertTransMDDReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.StartInsertTransMDDRepl.SerializeToString,
            ),
            'InsertTile': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertTile,
                    request_deserializer=client__rassrvr__service__pb2.InsertTileReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.InsertTileRepl.SerializeToString,
            ),
            'EndInsertMDD': grpc.unary_unary_rpc_method_handler(
                    servicer.EndInsertMDD,
                    request_deserializer=client__rassrvr__service__pb2.EndInsertMDDReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.EndInsertMDDRepl.SerializeToString,
            ),
            'InsertCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertCollection,
                    request_deserializer=client__rassrvr__service__pb2.InsertCollectionReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.InsertCollectionRepl.SerializeToString,
            ),
            'DeleteCollectionByName': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCollectionByName,
                    request_deserializer=client__rassrvr__service__pb2.DeleteCollectionByNameReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.DeleteCollectionByNameRepl.SerializeToString,
            ),
            'DeleteCollectionByOid': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCollectionByOid,
                    request_deserializer=client__rassrvr__service__pb2.DeleteCollectionByOidReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.DeleteCollectionByOidRepl.SerializeToString,
            ),
            'RemoveObjectFromCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveObjectFromCollection,
                    request_deserializer=client__rassrvr__service__pb2.RemoveObjectFromCollectionReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.RemoveObjectFromCollectionRepl.SerializeToString,
            ),
            'GetCollectionByNameOrOid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCollectionByNameOrOid,
                    request_deserializer=client__rassrvr__service__pb2.GetCollectionByNameOrOidReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.GetCollectionByNameOrOidRepl.SerializeToString,
            ),
            'GetCollOidsByNameOrOid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCollOidsByNameOrOid,
                    request_deserializer=client__rassrvr__service__pb2.GetCollOidsByNameOrOidReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.GetCollOidsByNameOrOidRepl.SerializeToString,
            ),
            'GetNextMDD': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNextMDD,
                    request_deserializer=client__rassrvr__service__pb2.GetNextMDDReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.GetNextMDDRepl.SerializeToString,
            ),
            'GetNextTile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNextTile,
                    request_deserializer=client__rassrvr__service__pb2.GetNextTileReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.GetNextTileRepl.SerializeToString,
            ),
            'EndTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.EndTransfer,
                    request_deserializer=client__rassrvr__service__pb2.EndTransferReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.EndTransferRepl.SerializeToString,
            ),
            'InitUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.InitUpdate,
                    request_deserializer=client__rassrvr__service__pb2.InitUpdateReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.InitUpdateRepl.SerializeToString,
            ),
            'ExecuteQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteQuery,
                    request_deserializer=client__rassrvr__service__pb2.ExecuteQueryReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.ExecuteQueryRepl.SerializeToString,
            ),
            'ExecuteHttpQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteHttpQuery,
                    request_deserializer=client__rassrvr__service__pb2.ExecuteHttpQueryReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.ExecuteHttpQueryRepl.SerializeToString,
            ),
            'GetNextElement': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNextElement,
                    request_deserializer=client__rassrvr__service__pb2.GetNextElementReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.GetNextElementRepl.SerializeToString,
            ),
            'ExecuteUpdateQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteUpdateQuery,
                    request_deserializer=client__rassrvr__service__pb2.ExecuteUpdateQueryReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.ExecuteUpdateQueryRepl.SerializeToString,
            ),
            'ExecuteInsertQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteInsertQuery,
                    request_deserializer=client__rassrvr__service__pb2.ExecuteInsertQueryReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.ExecuteInsertQueryRepl.SerializeToString,
            ),
            'GetNewOid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNewOid,
                    request_deserializer=client__rassrvr__service__pb2.GetNewOidReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.GetNewOidRepl.SerializeToString,
            ),
            'GetObjectType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetObjectType,
                    request_deserializer=client__rassrvr__service__pb2.GetObjectTypeReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.GetObjectTypeRepl.SerializeToString,
            ),
            'GetTypeStructure': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTypeStructure,
                    request_deserializer=client__rassrvr__service__pb2.GetTypeStructureReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.GetTypeStructureRepl.SerializeToString,
            ),
            'SetFormat': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFormat,
                    request_deserializer=client__rassrvr__service__pb2.SetFormatReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.SetFormatRepl.SerializeToString,
            ),
            'KeepAlive': grpc.unary_unary_rpc_method_handler(
                    servicer.KeepAlive,
                    request_deserializer=client__rassrvr__service__pb2.KeepAliveRequest.FromString,
                    response_serializer=common__service__pb2.Void.SerializeToString,
            ),
            'BeginStreamedHttpQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.BeginStreamedHttpQuery,
                    request_deserializer=client__rassrvr__service__pb2.BeginStreamedHttpQueryReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.StreamedHttpQueryRepl.SerializeToString,
            ),
            'GetNextStreamedHttpQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNextStreamedHttpQuery,
                    request_deserializer=client__rassrvr__service__pb2.GetNextStreamedHttpQueryReq.FromString,
                    response_serializer=client__rassrvr__service__pb2.StreamedHttpQueryRepl.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rasnet.service.ClientRassrvrService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClientRassrvrService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def OpenServerDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/OpenServerDatabase',
            client__rassrvr__service__pb2.OpenServerDatabaseReq.SerializeToString,
            client__rassrvr__service__pb2.OpenServerDatabaseRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseServerDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/CloseServerDatabase',
            client__rassrvr__service__pb2.CloseServerDatabaseReq.SerializeToString,
            common__service__pb2.Void.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/CreateDatabase',
            client__rassrvr__service__pb2.CreateDatabaseReq.SerializeToString,
            client__rassrvr__service__pb2.CreateDatabaseRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DestroyDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/DestroyDatabase',
            client__rassrvr__service__pb2.DestroyDatabaseReq.SerializeToString,
            client__rassrvr__service__pb2.DestroyDatabaseRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BeginTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/BeginTransaction',
            client__rassrvr__service__pb2.BeginTransactionReq.SerializeToString,
            client__rassrvr__service__pb2.BeginTransactionRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CommitTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/CommitTransaction',
            client__rassrvr__service__pb2.CommitTransactionReq.SerializeToString,
            client__rassrvr__service__pb2.CommitTransactionRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AbortTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/AbortTransaction',
            client__rassrvr__service__pb2.AbortTransactionReq.SerializeToString,
            client__rassrvr__service__pb2.AbortTransactionRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsTransactionOpen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/IsTransactionOpen',
            client__rassrvr__service__pb2.IsTransactionOpenReq.SerializeToString,
            client__rassrvr__service__pb2.IsTransactionOpenRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartInsertMDD(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/StartInsertMDD',
            client__rassrvr__service__pb2.StartInsertMDDReq.SerializeToString,
            client__rassrvr__service__pb2.StartInsertMDDRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartInsertTransMDD(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/StartInsertTransMDD',
            client__rassrvr__service__pb2.StartInsertTransMDDReq.SerializeToString,
            client__rassrvr__service__pb2.StartInsertTransMDDRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertTile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/InsertTile',
            client__rassrvr__service__pb2.InsertTileReq.SerializeToString,
            client__rassrvr__service__pb2.InsertTileRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndInsertMDD(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/EndInsertMDD',
            client__rassrvr__service__pb2.EndInsertMDDReq.SerializeToString,
            client__rassrvr__service__pb2.EndInsertMDDRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/InsertCollection',
            client__rassrvr__service__pb2.InsertCollectionReq.SerializeToString,
            client__rassrvr__service__pb2.InsertCollectionRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCollectionByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/DeleteCollectionByName',
            client__rassrvr__service__pb2.DeleteCollectionByNameReq.SerializeToString,
            client__rassrvr__service__pb2.DeleteCollectionByNameRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCollectionByOid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/DeleteCollectionByOid',
            client__rassrvr__service__pb2.DeleteCollectionByOidReq.SerializeToString,
            client__rassrvr__service__pb2.DeleteCollectionByOidRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveObjectFromCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/RemoveObjectFromCollection',
            client__rassrvr__service__pb2.RemoveObjectFromCollectionReq.SerializeToString,
            client__rassrvr__service__pb2.RemoveObjectFromCollectionRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCollectionByNameOrOid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/GetCollectionByNameOrOid',
            client__rassrvr__service__pb2.GetCollectionByNameOrOidReq.SerializeToString,
            client__rassrvr__service__pb2.GetCollectionByNameOrOidRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCollOidsByNameOrOid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/GetCollOidsByNameOrOid',
            client__rassrvr__service__pb2.GetCollOidsByNameOrOidReq.SerializeToString,
            client__rassrvr__service__pb2.GetCollOidsByNameOrOidRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNextMDD(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/GetNextMDD',
            client__rassrvr__service__pb2.GetNextMDDReq.SerializeToString,
            client__rassrvr__service__pb2.GetNextMDDRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNextTile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/GetNextTile',
            client__rassrvr__service__pb2.GetNextTileReq.SerializeToString,
            client__rassrvr__service__pb2.GetNextTileRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/EndTransfer',
            client__rassrvr__service__pb2.EndTransferReq.SerializeToString,
            client__rassrvr__service__pb2.EndTransferRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/InitUpdate',
            client__rassrvr__service__pb2.InitUpdateReq.SerializeToString,
            client__rassrvr__service__pb2.InitUpdateRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/ExecuteQuery',
            client__rassrvr__service__pb2.ExecuteQueryReq.SerializeToString,
            client__rassrvr__service__pb2.ExecuteQueryRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteHttpQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/ExecuteHttpQuery',
            client__rassrvr__service__pb2.ExecuteHttpQueryReq.SerializeToString,
            client__rassrvr__service__pb2.ExecuteHttpQueryRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNextElement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/GetNextElement',
            client__rassrvr__service__pb2.GetNextElementReq.SerializeToString,
            client__rassrvr__service__pb2.GetNextElementRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteUpdateQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/ExecuteUpdateQuery',
            client__rassrvr__service__pb2.ExecuteUpdateQueryReq.SerializeToString,
            client__rassrvr__service__pb2.ExecuteUpdateQueryRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteInsertQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/ExecuteInsertQuery',
            client__rassrvr__service__pb2.ExecuteInsertQueryReq.SerializeToString,
            client__rassrvr__service__pb2.ExecuteInsertQueryRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNewOid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/GetNewOid',
            client__rassrvr__service__pb2.GetNewOidReq.SerializeToString,
            client__rassrvr__service__pb2.GetNewOidRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetObjectType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/GetObjectType',
            client__rassrvr__service__pb2.GetObjectTypeReq.SerializeToString,
            client__rassrvr__service__pb2.GetObjectTypeRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTypeStructure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/GetTypeStructure',
            client__rassrvr__service__pb2.GetTypeStructureReq.SerializeToString,
            client__rassrvr__service__pb2.GetTypeStructureRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFormat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/SetFormat',
            client__rassrvr__service__pb2.SetFormatReq.SerializeToString,
            client__rassrvr__service__pb2.SetFormatRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KeepAlive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/KeepAlive',
            client__rassrvr__service__pb2.KeepAliveRequest.SerializeToString,
            common__service__pb2.Void.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BeginStreamedHttpQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/BeginStreamedHttpQuery',
            client__rassrvr__service__pb2.BeginStreamedHttpQueryReq.SerializeToString,
            client__rassrvr__service__pb2.StreamedHttpQueryRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNextStreamedHttpQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rasnet.service.ClientRassrvrService/GetNextStreamedHttpQuery',
            client__rassrvr__service__pb2.GetNextStreamedHttpQueryReq.SerializeToString,
            client__rassrvr__service__pb2.StreamedHttpQueryRepl.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
