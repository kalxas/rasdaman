# This file is part of rasdaman community.
#
# Rasdaman community is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Rasdaman community is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2003 - 2020 Peter Baumann / rasdaman GmbH.
#
# For more information please see <http://www.rasdaman.org>
# or contact Peter Baumann via <baumann@rasdaman.com>.
# ------------------------------------------------------------------------------
#
# rasdaman OGC frontend (petascope) configuration file
#
#  - Settings should be specified in key=value pairs.
#  - The server needs to be restarted for any changes to take effect.
#  - Full documentation of the settings in this file can be found at
#    https://doc.rasdaman.com/testing/05_geo-services-guide.html#configuration

# --------------------------- Spring configuration -----------------------------

# Files at most as large as specified here can be uploaded to petascope.
spring.http.multipart.max-file-size=128MB
spring.http.multipart.max-request-size=128MB


#--------------------------- Database configuration ----------------------------

# Default configuration for all DBMS.
spring.jpa.database=default
spring.jpa.hibernate.ddl-auto=none

spring.datasource.url=jdbc:postgresql://localhost:5432/petascopedb
spring.datasource.username=petauser
spring.datasource.password=petapasswd
spring.datasource.jdbc_jar_path=

# configurations for Tomcat JDBC Connection Pool
spring.datasource.tomcat.initial-size=30
spring.datasource.tomcat.max-active=70
spring.datasource.tomcat.max-idle=30

metadata_url=jdbc:postgresql://localhost:5432/petascopedb
metadata_user=petauser
metadata_pass=petapasswd
metadata_jdbc_jar_path=


#---------------------------- General configuration ---------------------------

server.contextPath=/rasdaman
secore_urls=internal
xml_validation=false
ogc_cite_output_optimization=false
petascope_servlet_url=
inspire_common_url=
uploaded_files_dir_tmp=/tmp/rasdaman_petascope/upload
max_wms_cache_size=100000000
full_stacktraces=false


#-------------------------- Deployment configuration ---------------------------

java_server=@GENERATED_java_server@
server.port=8080
static_html_dir_path=


#--------------------------- Rasdaman configuration -----------------------------

rasdaman_url=http://localhost:7001
rasdaman_database=RASBASE

rasdaman_user=rasguest
rasdaman_pass=rasguest
rasdaman_admin_user=rasadmin
rasdaman_admin_pass=rasadmin

rasdaman_retry_attempts=5
rasdaman_retry_timeout=10
rasdaman_bin_path=@GENERATED_rasdaman_bin_path@


#---------------------------- Security configuration ---------------------------

allow_write_requests_from=127.0.0.1

# Used only for embedded petascope deployment
security.require-ssl=false

# Key-store format for the certificate.
# Default is Java Key Store (JKS) generated by the java keytool.
#server.ssl.key-store-type=JKS

# An absolute path to the key-store. Petascope needs to have read permissions
# for this file path, specified as file://..
#server.ssl.key-store=

# The password to open the certificate from the configured key-store file.
#server.ssl.key-store-password=


#---------------------------- logging configuration ----------------------------

log4j.rootLogger=INFO, rollingFile

log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout  
log4j.appender.rollingFile.layout.ConversionPattern=%6p [%d{yyyy-MM-dd HH:mm:ss}] %c{1}@%L: %m%n

# Select one strategy for rolling files and comment out the other

# 1. Rolling files by maximum size and index
#log4j.appender.rollingFile.File=@LOG_DIR@/petascope.log
#log4j.appender.rollingFile.MaxFileSize=10MB
#log4j.appender.rollingFile.MaxBackupIndex=10
#log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender

# 2. Rolling files by time interval (e.g. once a day, or once a month)
log4j.appender.rollingFile.rollingPolicy.ActiveFileName=@LOG_DIR@/petascope.log  
log4j.appender.rollingFile.rollingPolicy.FileNamePattern=@LOG_DIR@/petascope.%d{yyyyMMdd}.log.gz
log4j.appender.rollingFile=org.apache.log4j.rolling.RollingFileAppender  
log4j.appender.rollingFile.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy

log4j.logger.org.springframework=WARN
log4j.logger.org.hibernate=WARN
log4j.logger.liquibase=WARN
log4j.logger.io.grpc=WARN
log4j.logger.io.netty=WARN
log4j.logger.org.apache=WARN

# Logging level for rasj only
rasj_logging_level=WARN

