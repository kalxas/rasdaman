/*
 * This file is part of rasdaman community.
 *
 * Rasdaman community is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Rasdaman community is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
 *2014 Peter Baumann / rasdaman GmbH.
 *
 * For more information please see <http://www.rasdaman.org>
 * or contact Peter Baumann via <baumann@rasdaman.com>.
 */

syntax = "proto3";
//The first line must specify the syntax.
package rasnet.service;
option java_package = "org.rasdaman.rasnet.service";

option cc_generic_services = false;
option java_generic_services = false;

import "common_service.proto";

message ConnectReq
{
    string userName = 1;
    string passwordHash = 2;
    string token = 3;
    string hostName = 4;
}

message ConnectRepl
{
    string clientUUID = 1;
    int32 keepAliveTimeout = 2;
    int32 clientId = 3;
}

message DisconnectReq
{
    string clientUUID = 1;
    int32 clientId = 2;
}

message OpenDbReq
{
    string clientUUID = 1;
    int32 clientId = 2;
    string databaseName = 3;
}

message OpenDbRepl
{
    string clientSessionId = 1;
    string dbSessionId = 2;
    string serverHostName = 3;
    uint32 port = 4;
}

message CloseDbReq
{
    string clientUUID = 1;
    int32 clientId = 2;
    string dbSessionId = 3;
}

message KeepAliveReq
{
    string clientUUID = 1;
}

service RasmgrClientService
{
    rpc Connect(ConnectReq) returns (ConnectRepl);
    rpc Disconnect(DisconnectReq) returns (rasnet.service.Void);
    rpc OpenDb(OpenDbReq) returns (OpenDbRepl);
    rpc CloseDb(CloseDbReq) returns (rasnet.service.Void);
    rpc KeepAlive(KeepAliveReq) returns (rasnet.service.Void);
}
